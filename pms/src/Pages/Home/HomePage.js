import React from 'react';
import {useState, useEffect } from 'react';
import axios from 'axios';
import Tilt from 'react-parallax-tilt'
import Navbar from '../../components/Navbar';
import {motion, useScroll} from 'framer-motion'
import Lottie from 'react-lottie';
import Profile from './Profile.json'
import Resources from './Resources.json'
import Calculator from './Calculator.json'
import LineGraph from './LineGraph';
import StockPrices from './StockPrices';
import Prediction from './Prediction.png'

function HomePage() {

  const { scrollYProgress } = useScroll();

  const graphData = [
    { xValues: ['2023-09-26', '2023-09-27', '2023-09-28', '2023-09-29', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05', '2023-10-06', '2023-10-09', '2023-10-10', '2023-10-11', '2023-10-12', '2023-10-13', '2023-10-16', '2023-10-17', '2023-10-18', '2023-10-19', '2023-10-20', '2023-10-23', '2023-10-24', '2023-10-25', '2023-10-26', '2023-10-27', '2023-10-30', '2023-10-31', '2023-11-01', '2023-11-02', '2023-11-03', '2023-11-06', '2023-11-07', '2023-11-08', '2023-11-09', '2023-11-10', '2023-11-13', '2023-11-14', '2023-11-15', '2023-11-16', '2023-11-17', '2023-11-20', '2023-11-21', '2023-11-22', '2023-11-24', '2023-11-27', '2023-11-28', '2023-11-29', '2023-11-30', '2023-12-01', '2023-12-04', '2023-12-05', '2023-12-06', '2023-12-07', '2023-12-08', '2023-12-11', '2023-12-12', '2023-12-13', '2023-12-14', '2023-12-15', '2023-12-18', '2023-12-19', '2023-12-20', '2023-12-21', '2023-12-22', '2023-12-26', '2023-12-27', '2023-12-28', '2023-12-29', '2024-01-02', '2024-01-03', '2024-01-04', '2024-01-05', '2024-01-08', '2024-01-09', '2024-01-10', '2024-01-11', '2024-01-12', '2024-01-16', '2024-01-17', '2024-01-18', '2024-01-19', '2024-01-22', '2024-01-23', '2024-01-24', '2024-01-25', '2024-01-26', '2024-01-29', '2024-01-30', '2024-01-31', '2024-02-01', '2024-02-02', '2024-02-05', '2024-02-06', '2024-02-07', '2024-02-08', '2024-02-09', '2024-02-12', '2024-02-13', '2024-02-14', '2024-02-15', '2024-02-16'], yValues: [120, 147, 151, 172, 171, 174, 183, 137, 129, 189, 161, 174, 145, 145, 196, 179, 151, 178, 141, 165, 163, 146, 151, 124, 151, 135, 182, 121, 150, 175, 147, 172, 184, 133, 145, 156, 197, 153, 175, 125, 152, 172, 191, 148, 127, 147, 189, 165, 170, 167, 135, 160, 155, 131, 175, 120, 183, 149, 127, 159, 166, 188, 137, 185, 144, 148, 155, 142, 173, 150, 172, 149, 173, 143, 145, 155, 145, 177, 147, 140, 193, 148, 137, 121, 156, 187, 126, 151, 153, 126, 144, 176, 143, 172, 157, 134, 145, 159, 164, 149]},
    { xValues: ['2023-09-26', '2023-09-27', '2023-09-28', '2023-09-29', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05', '2023-10-06', '2023-10-09', '2023-10-10', '2023-10-11', '2023-10-12', '2023-10-13', '2023-10-16', '2023-10-17', '2023-10-18', '2023-10-19', '2023-10-20', '2023-10-23', '2023-10-24', '2023-10-25', '2023-10-26', '2023-10-27', '2023-10-30', '2023-10-31', '2023-11-01', '2023-11-02', '2023-11-03', '2023-11-06', '2023-11-07', '2023-11-08', '2023-11-09', '2023-11-10', '2023-11-13', '2023-11-14', '2023-11-15', '2023-11-16', '2023-11-17', '2023-11-20', '2023-11-21', '2023-11-22', '2023-11-24', '2023-11-27', '2023-11-28', '2023-11-29', '2023-11-30', '2023-12-01', '2023-12-04', '2023-12-05', '2023-12-06', '2023-12-07', '2023-12-08', '2023-12-11', '2023-12-12', '2023-12-13', '2023-12-14', '2023-12-15', '2023-12-18', '2023-12-19', '2023-12-20', '2023-12-21', '2023-12-22', '2023-12-26', '2023-12-27', '2023-12-28', '2023-12-29', '2024-01-02', '2024-01-03', '2024-01-04', '2024-01-05', '2024-01-08', '2024-01-09', '2024-01-10', '2024-01-11', '2024-01-12', '2024-01-16', '2024-01-17', '2024-01-18', '2024-01-19', '2024-01-22', '2024-01-23', '2024-01-24', '2024-01-25', '2024-01-26', '2024-01-29', '2024-01-30', '2024-01-31', '2024-02-01', '2024-02-02', '2024-02-05', '2024-02-06', '2024-02-07', '2024-02-08', '2024-02-09', '2024-02-12', '2024-02-13', '2024-02-14', '2024-02-15', '2024-02-16'], yValues: [166, 154, 138, 161, 148, 94, 161, 164, 171, 128, 112, 103, 164, 95, 173, 159, 100, 164, 166, 105, 127, 113, 108, 135, 110, 138, 112, 138, 165, 130, 127, 139, 159, 162, 167, 109, 151, 127, 143, 93, 107, 153, 177, 164, 163, 126, 102, 170, 143, 181, 171, 172, 125, 151, 103, 153, 136, 139, 110, 85, 133, 173, 173, 105, 123, 113, 183, 184, 164, 89, 142, 179, 100, 131, 102, 137, 170, 169, 169, 114, 113, 127, 103, 163, 152, 167, 142, 172, 168, 169, 143, 159, 152, 102, 124, 154, 168, 158, 168, 157] },
    { xValues: ['2023-09-26', '2023-09-27', '2023-09-28', '2023-09-29', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05', '2023-10-06', '2023-10-09', '2023-10-10', '2023-10-11', '2023-10-12', '2023-10-13', '2023-10-16', '2023-10-17', '2023-10-18', '2023-10-19', '2023-10-20', '2023-10-23', '2023-10-24', '2023-10-25', '2023-10-26', '2023-10-27', '2023-10-30', '2023-10-31', '2023-11-01', '2023-11-02', '2023-11-03', '2023-11-06', '2023-11-07', '2023-11-08', '2023-11-09', '2023-11-10', '2023-11-13', '2023-11-14', '2023-11-15', '2023-11-16', '2023-11-17', '2023-11-20', '2023-11-21', '2023-11-22', '2023-11-24', '2023-11-27', '2023-11-28', '2023-11-29', '2023-11-30', '2023-12-01', '2023-12-04', '2023-12-05', '2023-12-06', '2023-12-07', '2023-12-08', '2023-12-11', '2023-12-12', '2023-12-13', '2023-12-14', '2023-12-15', '2023-12-18', '2023-12-19', '2023-12-20', '2023-12-21', '2023-12-22', '2023-12-26', '2023-12-27', '2023-12-28', '2023-12-29', '2024-01-02', '2024-01-03', '2024-01-04', '2024-01-05', '2024-01-08', '2024-01-09', '2024-01-10', '2024-01-11', '2024-01-12', '2024-01-16', '2024-01-17', '2024-01-18', '2024-01-19', '2024-01-22', '2024-01-23', '2024-01-24', '2024-01-25', '2024-01-26', '2024-01-29', '2024-01-30', '2024-01-31', '2024-02-01', '2024-02-02', '2024-02-05', '2024-02-06', '2024-02-07', '2024-02-08', '2024-02-09', '2024-02-12', '2024-02-13', '2024-02-14', '2024-02-15', '2024-02-16'], yValues: [224, 133, 294, 215, 291, 303, 214, 344, 325, 300, 379, 197, 199, 211, 307, 268, 237, 214, 208, 232, 338, 235, 183, 221, 190, 201, 240, 160, 161, 253, 201, 251, 270, 262, 183, 287, 207, 289, 202, 122, 188, 223, 275, 191, 307, 216, 365, 390, 322, 208, 214, 265, 345, 227, 184, 160, 290, 334, 127, 207, 170, 160, 251, 224, 190, 354, 252, 356, 349, 236, 149, 209, 266, 246, 214, 247, 269, 286, 214, 231, 214, 188, 246, 288, 308, 267, 238, 238, 274, 245, 274, 310, 239, 207, 250, 197, 306, 250, 153, 187]},
    { xValues: ['2023-09-26', '2023-09-27', '2023-09-28', '2023-09-29', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05', '2023-10-06', '2023-10-09', '2023-10-10', '2023-10-11', '2023-10-12', '2023-10-13', '2023-10-16', '2023-10-17', '2023-10-18', '2023-10-19', '2023-10-20', '2023-10-23', '2023-10-24', '2023-10-25', '2023-10-26', '2023-10-27', '2023-10-30', '2023-10-31', '2023-11-01', '2023-11-02', '2023-11-03', '2023-11-06', '2023-11-07', '2023-11-08', '2023-11-09', '2023-11-10', '2023-11-13', '2023-11-14', '2023-11-15', '2023-11-16', '2023-11-17', '2023-11-20', '2023-11-21', '2023-11-22', '2023-11-24', '2023-11-27', '2023-11-28', '2023-11-29', '2023-11-30', '2023-12-01', '2023-12-04', '2023-12-05', '2023-12-06', '2023-12-07', '2023-12-08', '2023-12-11', '2023-12-12', '2023-12-13', '2023-12-14', '2023-12-15', '2023-12-18', '2023-12-19', '2023-12-20', '2023-12-21', '2023-12-22', '2023-12-26', '2023-12-27', '2023-12-28', '2023-12-29', '2024-01-02', '2024-01-03', '2024-01-04', '2024-01-05', '2024-01-08', '2024-01-09', '2024-01-10', '2024-01-11', '2024-01-12', '2024-01-16', '2024-01-17', '2024-01-18', '2024-01-19', '2024-01-22', '2024-01-23', '2024-01-24', '2024-01-25', '2024-01-26', '2024-01-29', '2024-01-30', '2024-01-31', '2024-02-01', '2024-02-02', '2024-02-05', '2024-02-06', '2024-02-07', '2024-02-08', '2024-02-09', '2024-02-12', '2024-02-13', '2024-02-14', '2024-02-15', '2024-02-16'], yValues: [85, 58, 294, 344, 294, 55, 74, 58, 325, 97, 66, 186, 90, 84, 57, 83, 53, 160, 221, 63, 153, 99, 186, 60, 38, 225, 58, 78, 346, 248, 319, 99, 75, 54, 73, 160, 77, 298, 153, 62, 94, 256, 77, 52, 243, 52, 77, 70, 75, 92, 294, 65, 250, 79, 72, 236, 67, 75, 256, 74, 69, 228, 66, 322, 62, 67, 49, 61, 293, 65, 69, 74, 100, 124, 250, 58, 55, 84, 92, 287, 236, 256, 66, 63, 84, 280, 72, 78, 265, 248, 177, 194, 259, 156, 155, 64, 32, 280, 66, 61]},
    { xValues: ['2023-09-26', '2023-09-27', '2023-09-28', '2023-09-29', '2023-10-02', '2023-10-03', '2023-10-04', '2023-10-05', '2023-10-06', '2023-10-09', '2023-10-10', '2023-10-11', '2023-10-12', '2023-10-13', '2023-10-16', '2023-10-17', '2023-10-18', '2023-10-19', '2023-10-20', '2023-10-23', '2023-10-24', '2023-10-25', '2023-10-26', '2023-10-27', '2023-10-30', '2023-10-31', '2023-11-01', '2023-11-02', '2023-11-03', '2023-11-06', '2023-11-07', '2023-11-08', '2023-11-09', '2023-11-10', '2023-11-13', '2023-11-14', '2023-11-15', '2023-11-16', '2023-11-17', '2023-11-20', '2023-11-21', '2023-11-22', '2023-11-24', '2023-11-27', '2023-11-28', '2023-11-29', '2023-11-30', '2023-12-01', '2023-12-04', '2023-12-05', '2023-12-06', '2023-12-07', '2023-12-08', '2023-12-11', '2023-12-12', '2023-12-13', '2023-12-14', '2023-12-15', '2023-12-18', '2023-12-19', '2023-12-20', '2023-12-21', '2023-12-22', '2023-12-26', '2023-12-27', '2023-12-28', '2023-12-29', '2024-01-02', '2024-01-03', '2024-01-04', '2024-01-05', '2024-01-08', '2024-01-09', '2024-01-10', '2024-01-11', '2024-01-12', '2024-01-16', '2024-01-17', '2024-01-18', '2024-01-19', '2024-01-22', '2024-01-23', '2024-01-24', '2024-01-25', '2024-01-26', '2024-01-29', '2024-01-30', '2024-01-31', '2024-02-01', '2024-02-02', '2024-02-05', '2024-02-06', '2024-02-07', '2024-02-08', '2024-02-09', '2024-02-12', '2024-02-13', '2024-02-14', '2024-02-15', '2024-02-16'], yValues: [44, 16, 49, 15, 15, 12, 20, 11, 22, 35, 25, 23, 35, 18, 13, 35, 13, 21, 27, 11, 59, 20, 14, 59, 56, 13, 30, 24, 39, 13, 26, 24, 49, 27, 17, 29, 16, 27, 19, 14, 57, 20, 29, 23, 11, 59, 17, 43, 60, 13, 29, 18, 22, 21, 19, 13, 19, 26, 48, 17, 29, 17, 13, 43, 60, 15, 24, 28, 61, 15, 34, 14, 38, 48, 20, 19, 17, 20, 48, 44, 28, 36, 17, 24, 13, 59, 19, 14, 17, 38, 57, 22, 13, 38, 40, 31, 58, 15, 18, 20]},

  ];

  const [stockPrices, setStockPrices] = useState([]);

  useEffect(() => {
    // Fetch stock prices data
    const fetchStockPrices = async () => {
      try {
        const response = await axios.get('https://latest-stock-price.p.rapidapi.com/price', {
          params: {
            Indices: 'NIFTY 50',
          },
          headers: {
            'X-RapidAPI-Key': '92561f2925mshb77ccf9e0e6bde7p14900cjsne35cf4ff6769',
            'X-RapidAPI-Host': 'latest-stock-price.p.rapidapi.com',
          },
        });
        setStockPrices(response.data);
      } catch (error) {
        console.error(error);
      }
    };

    // Fetch Nifty data
    const fetchNiftyData = async () => {
      try {
        const response = await axios.get('https://nse-market.p.rapidapi.com/index_metrics', {
          params: { index: 'NIFTY 100' },
          headers: {
            'X-RapidAPI-Key': '92561f2925mshb77ccf9e0e6bde7p14900cjsne35cf4ff6769',
            'X-RapidAPI-Host': 'nse-market.p.rapidapi.com',
          },
        });
        setStockPrices(prevStocks => [...prevStocks, response.data]); // Add Nifty data to stockPrices array
      } catch (error) {
        console.error(error);
      }
    };

    fetchStockPrices();
    fetchNiftyData(); // Call the fetchNiftyData function to get Nifty data
  }, []);

  const [Predict, setPredict] = useState(false);

  const handleClickPredict = () => {
    setPredict(true);
  };

  return (
    <div className="HomePage">
      <Navbar/>
      {/* {console.log(Historical.Price)} */}
      {/* <div className='m-10'>
      <canvas id="myChart" width="400" height="400"></canvas>
    </div> */}
    <div className='flex items-center justify-center mr-10 mt-10 gap-96'>
    <LineGraph data={graphData} />
    <div className="scrollable-div" style={{ overflowY: 'scroll', height: '400px' }}>
      <motion.div
        className="progress-bar"
        style={{ scaleX: scrollYProgress }}
      />
      <StockPrices stockPrices={stockPrices} />
      {/* Repeat the paragraph as needed */}
    </div >
    
    </div>
    <div className='grid place-items-center m-10'>
    <div className='bg-[#1f1a26] w-1/2 p-5 text-white text-2xl font-bold rounded-lg w-300'
    onClick={handleClickPredict}>
            Predict Stock Price
          </div>
          {Predict && <img src={Prediction}/>}
          </div>
      <div className='grid grid-cols-3 place-items-center'>
      <motion.div
        initial={{ opacity: 0, x: -100 }}
        animate={{ opacity: 1, x: 0 }}
        transition={{ duration: 0.5 }}
        className="m-10 items-center"
      >
        <div className="flex flex-col items-center">
          <Lottie
            options={{
              loop: true,
              autoplay: true,
              animationData: Profile,
              rendererSettings: {
                preserveAspectRatio: 'xMidYMid slice',
              },
            }}
            height={300}
            width={300}
          />
          <Tilt className='bg-[#1f1a26] flex justify-center items-center p-5 text-white text-2xl font-bold rounded-lg w-300'>
            My Portfolio
          </Tilt>
        </div>
      </motion.div>
      <motion.div
        initial={{ opacity: 0, y: 100 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.5 }}
        className="m-10 justify-center items-center"
      >
        <div className="flex flex-col justify-center items-center">
          <Lottie
            options={{
              loop: true,
              autoplay: true,
              animationData: Resources,
              rendererSettings: {
                preserveAspectRatio: 'xMidYMid slice',
              },
            }}
            height={200}
            width={300}
          />
          <Tilt className='bg-[#1f1a26] flex justify-center items-center p-5 text-white text-2xl font-bold rounded-lg w-300'>
            Resources
          </Tilt>
        </div>
      </motion.div>
      <motion.div
        initial={{ opacity: 0, x: 200 }}
        animate={{ opacity: 1, x: 0 }}
        transition={{ duration: 0.5 }}
        className="m-10 items-center"
      >
        <div className="flex flex-col items-center mt-10">
          <Lottie
            options={{
              loop: true,
              autoplay: true,
              animationData: Calculator,
              rendererSettings: {
                preserveAspectRatio: 'xMidYMid slice',
              },
            }}
            height={250}
            width={250}
          />
          <div className='bg-[#1f1a26] flex justify-center items-center p-5 text-white text-2xl font-bold rounded-lg w-300'
          onClick={handleClickPredict}>
            Calculator
          </div>
          
        </div>
      </motion.div>
      </div>
      
    </div>
    
  );
}

export default HomePage;